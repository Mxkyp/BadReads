on:
  release:
    types: [released]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      - name: bring it down if up
        run: docker compose down

      - name: Build the Backend image
        run: docker compose build backend

      - name: Build the database image
        run: docker compose build database

      - name: Build the server image
        run: docker compose build server

  deploy-localy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: deploy locally
        run: docker compose up -d

      - name: check services health
        run: ./check_health.sh -t 20 database backend frontend
        working-directory: scripts

  build-production:
    needs: deploy-localy
    runs-on: [self-hosted, production]
    steps:
      - uses: actions/checkout@v4

      - name: bring it down if up
        run: docker compose down

      - name: Build the Backend image
        run: docker compose build backend

      - name: Build the database image
        run: docker compose build database

      - name: Build the server image
        run: |
          docker compose build \
            --build-arg SERVER_NAME=${{ secrets.SERVER_NAME }} \
            server

  deploy-production:
    needs: build-production
    runs-on: [self-hosted, production]
    steps:
      - name: deploy to production
        env:
          SUPER_SECRET_PASSWORD: ${{ secrets.DB_PASSWORD }}
          SSL_CERTIFICATE: ${{ secrets.SSL_CERTIFICATE }}
          SSL_KEY: ${{ secrets.SSL_KEY }}
          SSL_CERT_VOLUME: ${{ secrets.SSL_CERT_VOLUME }}
          SSL_KEY_VOLUME: ${{ secrets.SSL_KEY_VOLUME }}
          SERVER_PORT_EXPOSED1: ${{ secrets.SERVER_PORT_EXPOSED1 }}
          SERVER_PORT_EXPOSED2: ${{ secrets.SERVER_PORT_EXPOSED2 }}
          SERVER_NAME: ${{ secrets.SERVER_NAME }}
        run: docker compose up -d

      - name: check services health
        run: ./check_health.sh -t 20 database backend
        working-directory: scripts
