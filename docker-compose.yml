services:
  database:
    image: br_database
    build:
      context: ./database/
    networks:
      - badreads_net
    environment:
      POSTGRES_PASSWORD: ${SUPER_SECRET_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    depends_on:
      database:
        condition: service_healthy
    image: br_backend
    build:
      context: ./backend/
    networks:
      - badreads_net
    environment:
      SPRING_APPLICATION_NAME: BadReads
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/badReadsDB
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${SUPER_SECRET_PASSWORD}
      SPRING_SQL_INIT_MODE: always
      SPRING_AOP_AUTO: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    image: br_frontend
    build:
      context: ./frontend/
    networks:
      - badreads_net
    environment:
      VITE_SERVER_NAME: ${SERVER_NAME}
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    image: nginx-server
    build:
      context: ./server/
    volumes:
      - ${SSL_CERT_VOLUME}
      - ${SSL_KEY_VOLUME}
    ports:
      - ${SERVER_PORT_EXPOSED1}
      - ${SERVER_PORT_EXPOSED2}
    networks:
      - badreads_net
    environment:
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx
      SSL_CERTIFICATE: ${SSL_CERTIFICATE}
      SSL_KEY: ${SSL_KEY}
      SERVER_NAME: ${SERVER_NAME}
    depends_on:
      frontend:
        condition: service_healthy

networks:
  badreads_net:
    name: badreads_net
    external: false
